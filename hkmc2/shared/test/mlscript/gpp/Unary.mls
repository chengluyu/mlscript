:global
:p
:keepContext

keyword (stronger than *) negate (stronger than *)
syntax negate Expr ~> (0 - $1)
//│ |keyword| |(|stronger| |than| |*|)| |negate| |(|stronger| |than| |*|)|↵|syntax| |negate| |Expr| |~>| |(|0| |-| |$1|)|
//│ Keywords: `negate` 14 14
//│ Rules: unnamed#1 ::= negate ‹Expr›

negate 1
//│ |negate| |1|
//│ Pretty-print: 0 - 1
//│ AST: App(App(Var(-),Const(IntLit(0))),Const(IntLit(1)))

:pe
negate -1
//│ |negate| |-|1|
//│ ╔══[PARSE ERROR] Expected end of input; found literal instead
//│ ║  l.17: 	negate -1
//│ ╙──      	        ^
//│ Pretty-print: 0 - -
//│ AST: App(App(Var(-),Const(IntLit(0))),Var(-))

negate 1 + 2
//│ |negate| |1| |+| |2|
//│ Pretty-print: 0 - 1 + 2
//│ AST: App(App(Var(+),App(App(Var(-),Const(IntLit(0))),Const(IntLit(1)))),Const(IntLit(2)))

negate (1 + 2)
//│ |negate| |(|1| |+| |2|)|
//│ Pretty-print: 0 - 1 + 2
//│ AST: App(App(Var(-),Const(IntLit(0))),App(App(Var(+),Const(IntLit(1))),Const(IntLit(2))))

1 * negate 2
//│ |1| |*| |negate| |2|
//│ Pretty-print: 1 * (0 - 2)
//│ AST: App(App(Var(*),Const(IntLit(1))),App(App(Var(-),Const(IntLit(0))),Const(IntLit(2))))

negate 2 * 1
//│ |negate| |2| |*| |1|
//│ Pretty-print: (0 - 2) * 1
//│ AST: App(App(Var(*),App(App(Var(-),Const(IntLit(0))),Const(IntLit(2)))),Const(IntLit(1)))
