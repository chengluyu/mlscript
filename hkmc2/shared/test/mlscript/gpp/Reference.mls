:global
:p
:keepContext

keyword with, nil, cons
//│ |keyword| |with|,| |nil|,| |cons|
//│ Keywords: cons, nil, with

syntax List "a simple tail-recursive list"
//│ |syntax| |List| |"a simple tail-recursive list"|
//│ Rules: List ::= 

define List += nil ~> nil
//│ |define| |List| |+=| |nil| |~>| |nil|

define List += cons Expr (with List)? ~> ($1 + $2)
//│ |define| |List| |+=| |cons| |Expr| |(|with| |List|)|?| |~>| |(|$1| |+| |$2|)|

nil
//│ |nil|
//│ Pretty-print: nil
//│ AST: Var(nil)

cons 0
//│ |cons| |0|
//│ ╔══[WARNING] Invalid meta-variable index 2
//│ ║  l.16: 	define List += cons Expr (with List)? ~> ($1 + $2)
//│ ╙──      	                                               ^^
//│ Pretty-print: 0 + $2
//│ AST: App(App(Var(+),Const(IntLit(0))),Var($2))

cons 0 with nil
//│ |cons| |0| |with| |nil|
//│ Pretty-print: 0 + nil
//│ AST: App(App(Var(+),Const(IntLit(0))),Var(nil))

cons 0 with cons 1 with nil
//│ |cons| |0| |with| |cons| |1| |with| |nil|
//│ Pretty-print: 0 + 1 + nil
//│ AST: App(App(Var(+),Const(IntLit(0))),App(App(Var(+),Const(IntLit(1))),Var(nil)))

cons 0 with cons 1 with cons 2 with cons 3 with cons 4 with cons 5 with nil
//│ |cons| |0| |with| |cons| |1| |with| |cons| |2| |with| |cons| |3| |with| |cons| |4| |with| |cons| |5| |with| |nil|
//│ Pretty-print: 0 + 1 + 2 + 3 + 4 + 5 + nil
//│ AST: App(App(Var(+),Const(IntLit(0))),App(App(Var(+),Const(IntLit(1))),App(App(Var(+),Const(IntLit(2))),App(App(Var(+),Const(IntLit(3))),App(App(Var(+),Const(IntLit(4))),App(App(Var(+),Const(IntLit(5))),Var(nil)))))))
