:global
:ucs desugared

fun test(x, p) = if x is
  Int and p(x) then "foo"
  0 then "bar"
  else "qax"
//│ Desugared:
//│ if
//│   x@19 is Int and
//│     let $scrut@22 = p@20#0(x@19#3)
//│     $scrut@22 is true then "foo"
//│   x@19 is 0 then "bar"
//│   else "qax"

fun test(x, p) = if x is
  Str and p(x) then "foo"
  "lol" then "bar"
  else "qax"
//│ Desugared:
//│ if
//│   x@25 is Str and
//│     let $scrut@28 = p@26#0(x@25#3)
//│     $scrut@28 is true then "foo"
//│   x@25 is "lol" then "bar"
//│   else "qax"

test(0, _ => true)

:todo // handle overlapping branches
fun test(x, p) = if x is
  Num and p(x) then "great"
  2.71828 then "E"
  3.14159 then "PI"
  else "other"
//│ Desugared:
//│ if
//│   x@34 is Num and
//│     let $scrut@37 = p@35#0(x@34#4)
//│     $scrut@37 is true then "great"
//│   x@34 is 2.71828 then "E"
//│   x@34 is 3.14159 then "PI"
//│   else "other"

fun test(x, p) = if x is
  Bool and p(x) then "great"
  true then "false"
  false then "true"
//│ Desugared:
//│ if
//│   x@40 is Bool and
//│     let $scrut@43 = p@41#0(x@40#4)
//│     $scrut@43 is true then "great"
//│   x@40 is true then "false"
//│   x@40 is false then "true"

fun test(x, p) = if x is
  Object and p(x) then "great"
  Bool and p(x) then "great, again"
  true then "false"
  false then "true"
//│ Desugared:
//│ if
//│   let Object@50 = x@46#5
//│   let $scrut@52 = p@47#1(x@46#6)
//│   $scrut@52 is true then "great"
//│   x@46 is Bool and
//│     let $scrut@49 = p@47#0(x@46#4)
//│     $scrut@49 is true then "great, again"
//│   x@46 is true then "false"
//│   x@46 is false then "true"
